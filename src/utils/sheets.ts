import { GoogleSpreadsheet } from 'google-spreadsheet'
import getCurrentRow from './getCurrentRow'

const {
  GOOGLE_SHEET_ID,
  GOOGLE_SERVICE_EMAIL,
  GOOGLE_SERVICE_PRIVATE_KEY,
} = process.env;

export const initSheet = async () => {
  const doc = new GoogleSpreadsheet(GOOGLE_SHEET_ID)
  await doc.useServiceAccountAuth({
    // env var values are copied from service account credentials generated by google
    // see "Authentication" section in docs for more info
    client_email: GOOGLE_SERVICE_EMAIL!,
    private_key: GOOGLE_SERVICE_PRIVATE_KEY!.replace(/\\n/g, "\n"),
  });
  
  await doc.loadInfo();
  const lastSheet = doc.sheetsByIndex[0]

  await lastSheet.loadCells('A1:M32');

  return lastSheet
}

export const pushNewSpending = async (value: string) => {
  const sheet = await initSheet()
  const currentRowDate = getCurrentRow();

  const todaySpendingsCell = sheet.getCell(currentRowDate, 8)
  
  const {formula} = todaySpendingsCell;
  let newFormula = formula ? formula + '+' : '='
  newFormula += value;
  
  todaySpendingsCell.formula = newFormula;
  
  await sheet.saveUpdatedCells()
  
  const leftMoney = sheet.getCell(currentRowDate, 12)

  return leftMoney.value;
}